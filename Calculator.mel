global proc float Add(float $values[])
{
    float $sum = 0;

    for ($i=0; $i < (size($values)); $i++)
    {
        $sum += $values[$i];
    }
    return $sum;
}

global proc float Subtract(float $values[])
{
    float $difference = $values[0];

    for ($i=1; $i < (size($values)); $i++)
    {
        $difference -= $values[$i];
    }
    return $difference;       
}

global proc float Multiply(float $values[])
{
    float $product = 1;

    for ($i=0; $i < (size($values)); $i++)
    {
        $product *= $values[$i];
    }
    return $product;
}

global proc float Divide(float $values[])
{
    float $qoitient = $values[0];

    for ($i=1; $i < (size($values)); $i++)
    {
        $qoitient /= $values[$i];
    }
    return $qoitient;
}

global proc float Power(float $values[])
{
    $base = $values[0];
    $exponent = $values[1];

    if (size($values) == 2)
    {
        return pow($base, $exponent);
    }
}

global proc float Mean(float $values[])
{
    $sum = Add($values);
    
    $mean = $sum / size($values);

    return $mean;
}

global proc float Median(float $values[])
{
    $values = sort ($values);
    $remainder = (size($values)) % 2;
    int $middleNumOnOdd = (size($values)) / 2;
    int $num1OnEven = (size($values)) / 2;
    int $num2OnEven = ((size($values)) / 2) - 1;
    int $middleNumOnEven = ($num1OnEven + $num2OnEven) / 2;

    if ($remainder != 0)
    {
        return $values[$middleNumOnOdd];
    }
    else
    {
        return $values[$middleNumOnEven];
    }
}

global proc string Calculate(float $input[], string $operation)
{
    if ($operation == "Addition")
    {
        return (floatArrayToString($input, " + ") + " = " + Add($input) + "\n");
    }   
    else if ($operation == "Subtraction")
    {
        return (floatArrayToString($input, " - ") + " = " + Subtract($input) + "\n");
    }
    else if ($operation == "Multiplication")
    {
        return (floatArrayToString($input, " * ") + " = " + Multiply($input) + "\n");
    }
    else if ($operation == "Division")
    {
        return (floatArrayToString($input, " / ") + " = " + Divide($input) + "\n");
    }
    else if ($operation == "Exponent")
    {
        if (size($input) == 2)
        {
        return (floatArrayToString($input, "^") + " = " + Power($input) + "\n");
        }
        
        else
        {
        return  ("Error: Incorrect number of inputs provided. Please provide an input of only 2 numbers...\n");
        }
    }
    else if ($operation == "Mean")
    {
        return ("The mean of " + floatArrayToString($input, ", ") + " = " + Mean($input) + "\n");
    }
    else if ($operation == "Median")
    {
        return ("The median of " + floatArrayToString($input, ", ") + " = " + Median($input) + "\n");
    }
    else
    {
        return ("Please provide valid values and choose an operation from 1-7 in the format Calculate({#,#,#,etc}, #)...\n");
    }
}

global proc AddToArray(float $num)
{
    global float $array[];
    string $listInput = $num;

    int $placement = size($array);
    string $arrayField = `optionVar -q "visualList"`;

    $array[$placement] = $num;
    textScrollList -e -a $listInput $arrayField;

    $placement++;
}

global proc float Add_ButtonCmd()
{
    string $inputField = `optionVar -q "arrayFloatNum"`;
    
    float $numToAdd = `floatField -q -value $inputField`;
    
    AddToArray($numToAdd);
    return $numToAdd;
}

global proc Clear_ButtonCmd()
{
    global float $array[];
    string $arrayField = `optionVar -q "visualList"`;
    
    clear $array;
    textScrollList -e -removeAll $arrayField;

    textScrollList -e -a "Inputs:" $arrayField;
}

global proc Calculate_ButtonCmd()
{
    global float $array[];
    string $opMenu = `optionVar -q "opMenu"`;
    string $resultField = `optionVar -q "opResult"`;
    
    string $opSelected = `optionMenu -q -value $opMenu`;

    string $result = Calculate($array, $opSelected);
    textField -e -text $result $resultField;
}

global proc CalculatorUI()
{
    string $uiWindow = "uiWindow";

    if (`window -exists $uiWindow`) deleteUI $uiWindow;
    global float $array[];
    clear $array;

    $uiWindow = `window -title "Calulator"
                        -widthHeight 300 400
                        -resizeToFitChildren 1
                        $uiWindow`;
    string $firstColumn = `columnLayout -parent $uiWindow -adjustableColumn 1`;
        optionVar -stringValue "opMenu" `optionMenu -label "Operation: " -parent $firstColumn -width 200`;
            optionVar -stringValue "opAddMItem" `menuItem -l "Addition"`;
            menuItem -l "Subtraction";
            menuItem -l "Multiplication";
            menuItem -l "Division";
            menuItem -l "Exponent";
            menuItem -l "Mean";
            menuItem -l "Median";
        optionVar -stringValue "visualList" `textScrollList -parent $firstColumn -append "Inputs:"`;
    string $numAddRow = `rowColumnLayout -p $uiWindow -numberOfRows 1`;
        optionVar -stringValue "arrayFloatNum" `floatField -p $numAddRow -width 150`;
        button -parent $numAddRow -label "Add" -width 75 -command "Add_ButtonCmd";
        button -parent $numAddRow -label "Clear" -width 75 -command "Clear_ButtonCmd";
        button -p $firstColumn -label "Calculate" -command "Calculate_ButtonCmd";
        optionVar -stringValue "opResult" `textField -p $firstColumn -editable 0`;
    showWindow $uiWindow;
}
CalculatorUI();

//Simply run the script and add inputs. When the desired numbers for calculation are entered, select an operation from the 
//drop down at the top of the window and hit the calculate button. Your result will appear at the bottom of the window.
//If you would like to provide other values hit the clear button. Hitting the calculate button again will replace the previous result.